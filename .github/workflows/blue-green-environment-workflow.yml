# Blue-Green Deployment Workflow

on:
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  # Check which environment is currently active
  get-active-environment:
    runs-on: ubuntu-latest
    # outputs:
    #  env: ${{ steps.set-env-output.outputs.env }}
    #  project_dir: ${{ steps.set-env-output.outputs.project_dir }}

    env:
      env_value: not_set
      project_dir: not_set

    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.HOSTINGER_SSH_KEY }}

      - name: Determine current environment
        id: get-active
        run: |
          ssh -p 65002 -o StrictHostKeyChecking=no u605848448@217.21.77.232 \
          'readlink /home/u605848448/domains/michael-gibbs-testing.site/public_html/current || echo "ERROR"' > current_env.txt
          if [ ! -s current_env.txt ]; then
            echo "ERROR: No environment file found or permission denied" > current_env.txt
          fi

      - name: Set environment based on active
        id: set-env-output
        run: |
          env_value=$(cat current_env.txt | tr -d '\n' | tr -d '\r')  # Remove newlines or carriage returns

          # Set project directory based on environment
          if [[ "$env_value" == "/home/u605848448/domains/michael-gibbs-testing.site/blue/public/" ]]; then
            project_dir="/home/u605848448/domains/michael-gibbs-testing.site/blue/"
          else
            project_dir="/home/u605848448/domains/michael-gibbs-testing.site/green/"
          fi

          # Persist to GITHUB_ENV
          # echo "env=$env_value" >> $GITHUB_ENV
          # echo "project_dir=$project_dir" >> $GITHUB_ENV

          # Set outputs for the deploy job
          # echo "::set-output name=env::$env_value"
          # echo "::set-output name=project_dir::$project_dir"

      - name: Output environment value
        run: |
          echo "Environment: ${{ env.env }}"
          echo "Project Directory: ${{ env.project_dir }}"
          # echo "Environment: $env_value"        # Using local variable
          # echo "Project Directory: $project_dir" # Using local variable

  deploy:
    runs-on: ubuntu-latest
    needs: get-active-environment
    steps:
      - name: Output environment values
        run: |
          # echo "Environment: ${{ needs.get-active-environment.outputs.env }}"
          # echo "Project Directory: ${{ needs.get-active-environment.outputs.project_dir }}"

          echo "Environment: ${{ env.env }}"
          echo "Project Directory: ${{ env.project_dir }}"

      - name: Check out code
        uses: actions/checkout@v3

      # Install dependencies for Laravel app
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2' # or your specific version

      - name: Install Composer dependencies
        run: composer install --no-dev --optimize-autoloader

      - name: Deploy to Standby Environment
        if: ${{ env.env == '/home/u605848448/domains/michael-gibbs-testing.site/blue/public/' }}
        uses: SamKirkland/FTP-Deploy-Action@4.1.0
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: ${{ secrets.FTP_PORT }}
          protocol: ftp
          local-dir: "./"
          server-dir: ${{ secrets.GREEN_DEPLOY_PATH }}
          exclude: |
            .git*
            node_modules/*
            tests/*
            .env
            .github/*

      - name: Deploy to Blue Environment
        if: ${{ env.env == '/home/u605848448/domains/michael-gibbs-testing.site/green/public/' }}
        uses: SamKirkland/FTP-Deploy-Action@4.1.0
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: ${{ secrets.FTP_PORT }}
          protocol: ftp
          local-dir: "./"
          server-dir: ${{ secrets.BLUE_DEPLOY_PATH }}
          exclude: |
            .git*
            node_modules/*
            tests/*
            .env
            .github/*

  swap:
      runs-on: ubuntu-latest
      needs: deploy
      if: success()
      steps:
        - name: Set up SSH
          uses: webfactory/ssh-agent@v0.5.3
          with:
            ssh-private-key: ${{ secrets.HOSTINGER_SSH_KEY }}

        - name: Swap Environments
          run: |
            ssh -p 65002 -o StrictHostKeyChecking=no u605848448@217.21.77.232 << 'EOF'
            CURRENT_TARGET=$(readlink /home/u605848448/domains/michael-gibbs-testing.site/public_html/current)

            if [[ "$CURRENT_TARGET" == "/home/u605848448/domains/michael-gibbs-testing.site/blue/public/" ]]; then
              ln -sfn /home/u605848448/domains/michael-gibbs-testing.site/green/public/ /home/u605848448/domains/michael-gibbs-testing.site/public_html/current
            elif [[ "$CURRENT_TARGET" == "/home/u605848448/domains/michael-gibbs-testing.site/green/public/" ]]; then
              ln -sfn /home/u605848448/domains/michael-gibbs-testing.site/blue/public/ /home/u605848448/domains/michael-gibbs-testing.site/public_html/current
            else
              echo "ERROR: Unknown current target: $CURRENT_TARGET"
              exit 1
            fi
            EOF
